import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Fenetre extends JFrame {
	private JButton planterDesArbres = new JButton("Planter des arbres");
	private JPanel container = new JPanel();
	private JComboBox<Integer> combo = new JComboBox<Integer>();
	private int arbreAPlanter, arbreDansMaForet;
	final private Integer[] arbrePlanterTableau = { 10, 20, 30, 40 };
	private JLabel ecran = new JLabel();
	String quantiteArbreString;

	public void schedule(TimerTask timerTask, int i, int j) {
	}

	public Fenetre() {
		this.setTitle("Ma foret");
		this.setSize(500, 300);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		initComposant();
		this.setContentPane(container);
		this.setVisible(true);
	}

	private void initComposant() {

		JLabel label = new JLabel("Il y a:");
		ecran = new JLabel("0");
		JLabel label1 = new JLabel("arbres dans ma foret test");

		container.setBackground(Color.white);
		container.setLayout(new BorderLayout());
		planterDesArbres.addActionListener(new PlanterArbresListener());

		combo = new JComboBox(arbrePlanterTableau);
		combo.setSelectedIndex(3);
		combo.addActionListener(combo);
		
		JPanel south = new JPanel();
		JPanel north = new JPanel();
		south.add(planterDesArbres);
		south.add(combo);
		container.add(south, BorderLayout.SOUTH);
		north.add(label);
		north.add(ecran);
		north.add(label1);
		north.setBorder(BorderFactory.createLineBorder(Color.black));
		container.add(north, BorderLayout.NORTH);

		Timer arbrepocalypse = new Timer();
		arbrepocalypse.schedule(new TimerTask() {
			public void run() {
				if (arbreDansMaForet > 50) {
					arbreDansMaForet -= (arbreDansMaForet / 20);
					quantiteArbreString = Integer.toString(arbreDansMaForet);
					ecran.setText(quantiteArbreString);
				}
			}
		}, 0, 500);
	}


	public class PlanterArbresListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			arbreAPlanter=(Integer)combo.getSelectedItem();
			arbreDansMaForet += arbreAPlanter;
			quantiteArbreString = Integer.toString(arbreDansMaForet);
			ecran.setText(quantiteArbreString);
		}
	}

	public static void main(String[] arg) {
		Fenetre fen = new Fenetre();
	}
}
